# {{ ansible_managed }}
{% import 'dovecot_macros.j2' as macro with context %}
{# the macro output is a list formatted string, therefore need to "cast"
   it to a list again #}
{% set dovecot_tpl_protocols = macro.protocol_list() | replace("[", "") | replace("]", "") | replace("'", "") | replace(" ", "") | split(",") %}

{% for protocol in dovecot_tpl_protocols %}{# for-1 #}
{% set dovecot_tpl_services = macro.service_list(protocol) | replace("[", "") | replace("]", "") | replace("'", "") | replace(" ", "") | split(",") %}
{% for service in dovecot_tpl_services %}{# for-2 #}
{% if service | replace("sieve", "managesieve") in dovecot_protocols %}{# if-1 #}
{% set dovecot_tpl_ferm_allow = macro.service_query(protocol, service, 'allow') | replace("[", "") | replace("]", "") | replace("u'", "") | replace("'", "") | replace(" ", "") | split(",") %}
{% set dovecot_tpl_ferm_service = macro.service_query(protocol, service, 'port') %}
{% if dovecot_tpl_ferm_allow != False %}{# if-2 #}
protocol tcp dport {{ dovecot_tpl_ferm_service }} {
{% if dovecot_tpl_ferm_allow %}{# if-3 #}
{% if dovecot_tpl_ferm_allow[0] | length > 0 %}{# if-4 #}
	@def $ITEMS = ( @ipfilter( ({{ dovecot_tpl_ferm_allow | unique | join(" ") }}) ) );
	@if @ne($ITEMS,"") {
		saddr $ITEMS ACCEPT;
	}
{% else %}{# else-4 #}
    ACCEPT;
{% endif %}{# endif-4 #}
{% else %}{# else-3 #}
	ACCEPT;
{% endif %}{# endif-3 #}
}

{% endif %}{# endif-2 #}
{% endif %}{# endif-1 #}
{% endfor %}{# endfor-2 #}
{% endfor %}{# endfor-1 #}
